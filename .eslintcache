[{"/Users/qboi/Desk/covid-tracker/src/Infobox.js":"1","/Users/qboi/Desk/covid-tracker/src/Map.js":"2","/Users/qboi/Desk/covid-tracker/src/App.js":"3","/Users/qboi/Desk/covid-tracker/src/util.js":"4","/Users/qboi/Desk/covid-tracker/src/LineGraph.js":"5","/Users/qboi/Desk/covid-tracker/src/Table.js":"6"},{"size":971,"mtime":1610173656672,"results":"7","hashOfConfig":"8"},{"size":596,"mtime":1610166397694,"results":"9","hashOfConfig":"8"},{"size":4336,"mtime":1610173414690,"results":"10","hashOfConfig":"8"},{"size":1947,"mtime":1610168314467,"results":"11","hashOfConfig":"8"},{"size":2496,"mtime":1610169802142,"results":"12","hashOfConfig":"8"},{"size":410,"mtime":1610170759939,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7xn0f7",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/qboi/Desk/covid-tracker/src/Infobox.js",[],"/Users/qboi/Desk/covid-tracker/src/Map.js",[],"/Users/qboi/Desk/covid-tracker/src/App.js",["28","29","30"],"import React, {useEffect, useState } from \"react\";\nimport { MenuItem, FormControl, Select, Card, CardContent} from \"@material-ui/core\";\nimport './App.css';\nimport Infobox from \"./Infobox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport numeral from \"numeral\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]); \n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3); \n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  // https://disease.sh/v3/covid-19/countries\n  useEffect(() => {    \n    const getCountriesData = async () => {\n      fetch (\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,  // United States, United Kingdom\n            value: country.countryInfo.iso2, // UK, USA, FR \n          }));\n          let sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value; \n    const url = \n      countryCode === \"worldwide\" \n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url) \n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode); \n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">    \n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select \n            variant=\"outlined\" \n            value = {country}\n            onChange={onCountryChange} \n           >\n              {/* Loop through all the countries and show a drop \n              down list of the countries*/}\n            <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n            {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n        </FormControl>\n      </div>\n      <div className=\"app__stats\">\n        <Infobox title=\"Coronavirus Cases\" \n        onClick={(event) => setCasesType(\"cases\")}\n        title=\"Coronavirus Cases\"\n        isRed\n        active={casesType === \"cases\"}\n        cases={prettyPrintStat(countryInfo.todayCases)}\n        total={numeral(countryInfo.cases).format(\"0.0a\")}\n      />\n\n        <Infobox title=\"Recovered\" \n        onClick={(event) => setCasesType(\"recovered\")}\n        title=\"Recovered\"\n        active={casesType === \"recovered\"}\n        cases={prettyPrintStat(countryInfo.todayRecovered)}\n        total={numeral(countryInfo.recovered).format(\"0.0a\")}\n      />\n        <Infobox title=\"Deaths\" \n        onClick={(event) => setCasesType(\"deaths\")}\n        title=\"Deaths\"\n        isRed\n        active={casesType === \"deaths\"}\n        cases={prettyPrintStat(countryInfo.todayDeaths)}\n        total={numeral(countryInfo.deaths).format(\"0.0a\")}\n        />\n      </div>\n      <Map \n       countries={mapCountries} \n       casesType={casesType}\n       center={mapCenter}\n       zoom={mapZoom}\n      />\n      </div>\n      <Card className=\"app__right\">\n      <CardContent>\n        <div className=\"app_information\">\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new {casesType}</h3>\n          <LineGraph casesType={casesType} />\n        </div>\n      </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n",["31","32"],"/Users/qboi/Desk/covid-tracker/src/util.js",[],"/Users/qboi/Desk/covid-tracker/src/LineGraph.js",[],"/Users/qboi/Desk/covid-tracker/src/Table.js",[],{"ruleId":"33","severity":1,"message":"34","line":89,"column":9,"nodeType":"35","endLine":89,"endColumn":34},{"ruleId":"33","severity":1,"message":"34","line":98,"column":9,"nodeType":"35","endLine":98,"endColumn":26},{"ruleId":"33","severity":1,"message":"34","line":105,"column":9,"nodeType":"35","endLine":105,"endColumn":23},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-global-assign","no-unsafe-negation"]